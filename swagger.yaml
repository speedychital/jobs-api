openapi: 3.0.0
info:
    title: Jobs API
    contact: {}
    version: "1.0"
servers:
    - url: https://project-jobs-api.herokuapp.com/api/v1
      variables: {}
paths:
    /auth/register:
        post:
            tags:
                - Auth
            summary: Register User
            operationId: RegisterUser
            parameters: []
            requestBody:
                description: "Provide name, email and password in JSON format. See example for more details"
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RegisterUserRequest"
                        example:
                            name: bob
                            email: bob@gmail.com
                            password: secret
                required: true
            responses:
                "201":
                    description: "Success. Use the token received to Authorize for various requests in Jobs section"
                    headers: {}
                "400":
                    description: "Bad Request, please see the response message for details."
                    headers: {}
                "500":
                    description: "Server error, please see the response message for details."
            deprecated: false
            security: []
    /auth/login:
        post:
            tags:
                - Auth
            summary: Login User
            operationId: LoginUser
            parameters: []
            requestBody:
                description: "Provide email and password registerd with us. See example below for more details"
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LoginUserRequest"
                        example:
                            email: susan@gmail.com
                            password: secret
                required: true
            responses:
                "200":
                    description: "Success. Use the token received to Authorize for various requests in Jobs section"
                    headers: {}
                "400":
                    description: "Bad Request, please see the response message for details."
                    headers: {}
                "401":
                    description: "Invalid credentials. Please register, if you don't have one"
                    header: {}
            deprecated: false
            security: []
    /jobs:
        post:
            tags:
                - Jobs
            summary: Create Job
            operationId: CreateJob
            parameters: []
            requestBody:
                description: "Provide a JSON object, giving details of Job you want to create. It have company, position as required fields. status [pending, interview, completed] is OPTIONAL"
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateJobRequest"
                        example:
                            company: google
                            position: front-end developer
                required: true
            responses:
                "201":
                    description: "Success"
                    headers: {}
                "400":
                    description: "Bad Request. See the response message for details."
                    header: {}
                "401":
                    description: "Invalid credentials. Please authorise yourself by updating token at top."
                    header: {}
                "500":
                    description: "Internal Server Error."
                    header: {}
            deprecated: false
        get:
            tags:
                - Jobs
            summary: Get All Jobs
            operationId: GetAllJobs
            parameters: []
            responses:
                "200":
                    description: "Success. An Object of 'jobs' and 'length' will be received."
                    headers: {}
                "401":
                    description: "Invalid credentials. Please authorise yourself by updating token at top."
                    header: {}
            deprecated: false
    /jobs/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The job ID
        get:
            tags:
                - Jobs
            summary: Get Single Job
            operationId: GetSingleJob
            parameters: []
            responses:
                "200":
                    description: "Success"
                    headers: {}
                "401":
                    description: "Invalid credentials. Please authorise yourself by updating token at top."
                    header: {}
                "404":
                    description: "Incorrect ID"
                    headers: {}
            deprecated: false
        patch:
            tags:
                - Jobs
            summary: Update Job
            operationId: UpdateJob
            parameters: []
            requestBody:
                description: "A JSON object containing fields that you want to update.Invalid fields will be discarded."
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateJobRequest"
                        example:
                            company: random
                            position: intern
                required: true
            responses:
                "200":
                    description: "Success"
                    headers: {}
                "401":
                    description: "Invalid credentials. Please authorise yourself by updating token at top."
                    header: {}
                "404":
                    description: "Incorrect ID"
                    headers: {}
            deprecated: false
        delete:
            tags:
                - Jobs
            summary: Delete Job
            operationId: DeleteJob
            parameters: []
            responses:
                "200":
                    description: "Success"
                    headers: {}
                "401":
                    description: "Invalid credentials. Please authorise yourself by updating token at top."
                    header: {}
                "404":
                    description: "Incorrect ID"
                    headers: {}
            deprecated: false
components:
    schemas:
        RegisterUserRequest:
            title: RegisterUserRequest
            required:
                - name
                - email
                - password
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string
            example:
                name: bob
                email: bob@gmail.com
                password: secret
        LoginUserRequest:
            title: LoginUserRequest
            required:
                - email
                - password
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
            example:
                email: susan@gmail.com
                password: secret
        CreateJobRequest:
            title: CreateJobRequest
            required:
                - company
                - position
            type: object
            properties:
                company:
                    type: string
                position:
                    type: string
            example:
                company: google
                position: front-end developer
        UpdateJobRequest:
            title: UpdateJobRequest
            required:
                - company
                - position
            type: object
            properties:
                company:
                    type: string
                position:
                    type: string
            example:
                company: random
                position: intern
    securitySchemes:
        httpBearer:
            type: http
            scheme: bearer
security:
    - httpBearer: []
tags:
    - name: Auth
      description: ""
    - name: Jobs
      description: ""
